:root {
  --color-bg: #1e1f24;
  --color-surface: #2a2c33;
  --color-border: #3a3d46;
  --color-text: #f5f7fa;
  --color-accent: #4ea1ff;
  --toolbar-height: 40px;
  font-family: system-ui, sans-serif;
}

body, html, #root, .app-root { height: 100%; margin: 0; }
body { background: var(--color-bg); color: var(--color-text); }

/* Splash Screen */
.splash-screen {
  position: fixed;
  inset: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: radial-gradient(circle at 50% 40%, #222 0%, #111 70%);
  color: #eee;
  z-index: 9999;
  transition: opacity 300ms ease, transform 400ms ease;
}
.splash-screen.fade-out {
  opacity: 0;
  pointer-events: none;
  transform: scale(1.02);
}
.splash-logo {
  width: 200px;
  max-width: 60vw;
  user-select: none;
  filter: drop-shadow(0 4px 18px rgba(0,0,0,0.55));
  animation: pulse 2.4s ease-in-out infinite;
}
.splash-loading-text {
  margin-top: 1.25rem;
  font-size: 0.9rem;
  letter-spacing: 0.08em;
  text-transform: uppercase;
  opacity: 0.8;
  animation: fadeBlink 2.2s ease-in-out infinite;
}
@keyframes pulse {
  0%,100% { transform: scale(1); }
  50% { transform: scale(1.035); }
}
@keyframes fadeBlink {
  0%,100% { opacity: 0.3; }
  50% { opacity: 0.85; }
}

.app-root { display: flex; flex-direction: column; height: 100%; overflow: hidden; }
/* Sticky toolbar pinned to the top */
.toolbar { position: sticky; top: 0; z-index: 10; display: flex; gap: 8px; align-items: center; height: var(--toolbar-height); padding: 0 12px; background: var(--color-surface); border-bottom: 1px solid var(--color-border); }
.toolbar-title { font-size: 14px; font-weight: 600; letter-spacing: 0.5px; }
.toolbar-inline-actions { display: flex; gap: 8px; }

/* Hamburger Menu */
.hamburger-root { position: relative; }
.hamburger-button { background: transparent; border: none; padding: 4px; cursor: pointer; display: flex; align-items: center; justify-content: center; }
.hamburger-button:hover .hamburger-icon span { background: var(--color-accent); }
.hamburger-icon { width: 20px; height: 16px; position: relative; display: inline-block; }
.hamburger-icon span { position: absolute; left: 0; right: 0; height: 2px; background: var(--color-text); transition: background 160ms ease; }
.hamburger-icon span:nth-child(1) { top: 0; }
.hamburger-icon span:nth-child(2) { top: 7px; }
.hamburger-icon span:nth-child(3) { bottom: 0; }
.hamburger-menu { position: absolute; top: 100%; left: 0; background: var(--color-surface); border: 1px solid var(--color-border); padding: 8px; display: flex; flex-direction: column; gap: 6px; min-width: 170px; box-shadow: 0 4px 16px rgba(0,0,0,0.4); animation: menuFade 120ms ease; }
.hamburger-menu button { width: 100%; text-align: left; background: var(--color-surface); border: none; padding: 6px 8px; box-sizing: border-box; }
.hamburger-menu button:hover { background: var(--color-border); border: none; }
.hamburger-menu button:focus-visible { outline: 2px solid var(--color-accent); outline-offset: 2px; }
.toolbar-new-node { margin-left: 4px; }
.toolbar-new-node {
  background: var(--color-accent);
  border: 1px solid var(--color-accent);
  color: #fff;
  border-radius: 999px;
  padding: 6px 16px;
  font-weight: 600;
  letter-spacing: 0.3px;
  line-height: 1;
  display: inline-flex;
  align-items: center;
  gap: 6px;
  transition: background 160ms ease, box-shadow 160ms ease, transform 80ms ease;
}
.toolbar-new-node:hover {
  background: #63b4ff;
  border-color: #63b4ff;
  box-shadow: 0 0 0 3px rgba(78,161,255,0.25);
}
.toolbar-new-node:active {
  transform: translateY(1px);
}
.toolbar-new-node:focus-visible {
  outline: 2px solid #9cd2ff;
  outline-offset: 2px;
}
@keyframes menuFade { from { opacity: 0; transform: translateY(-4px); } to { opacity: 1; transform: translateY(0); } }

/* Workspace fills remaining space under toolbar */
.workspace { flex: 1; display: flex; min-height: 0; overflow: hidden; }
.sidebar { width: 260px; background: var(--color-surface); border-left: 1px solid var(--color-border); padding: 12px; box-sizing: border-box; overflow: hidden; position: relative; display: flex; flex-direction: column; }
.sidebar-title { margin: 0 0 8px; font-size: 14px; letter-spacing: 0.5px; }
.sidebar.is-collapsed .property-pane-outer { display: block; }
.workspace { position: relative; }
.sidebar { position: absolute; top: 0; right: 0; bottom: 0; z-index: 20; display: flex; flex-direction: column; width: 260px; transition: transform 240ms ease, opacity 240ms ease; background: var(--color-surface); }
.workspace[data-sidebar-open="false"] .sidebar { transform: translateX(100%); opacity: 0; pointer-events: none; }
.workspace[data-sidebar-open="true"] .sidebar { transform: translateX(0); opacity: 1; pointer-events: auto; }
.sidebar-panel { background: var(--color-surface); border: 1px solid var(--color-border); border-radius: 4px; padding: 8px; box-sizing: border-box; transform: translateX(0); opacity: 1; transition: transform 220ms ease, opacity 220ms ease; }
.sidebar-panel.is-closed { transform: translateX(-12px); opacity: 0; pointer-events: none; }
.sidebar-placeholder { margin-top: 4px; font-size: 12px; opacity: 0.7; }
/* Property pane slide behavior */
.sidebar .property-pane-wrapper { position: relative; }
.property-pane-slide-container { position: relative; }
.property-pane-shell { transition: opacity 160ms ease; }
/* Only the diagram canvas scrolls; allow large diagrams */
.diagram-canvas { flex: 1; position: relative; overflow: auto; }
/* The SVG should size to content; prevent forced stretch so scroll works */
.diagram-canvas svg { display: block; background: #ffffff; }
button { background: var(--color-border); border: 1px solid var(--color-border); color: var(--color-text); padding: 4px 10px; cursor: pointer; }
button:hover { background: var(--color-accent); border-color: var(--color-accent); }
.toolbar-spacer { flex: 1; }
.toolbar-gh-link { color: var(--color-text); display: inline-flex; align-items: center; justify-content: center; width: 28px; height: 28px; border-radius: 6px; text-decoration: none; transition: background 160ms ease, color 160ms ease; }
.toolbar-gh-link:hover { background: var(--color-border); color: var(--color-accent); }
.toolbar-gh-link:focus-visible { outline: 2px solid var(--color-accent); outline-offset: 2px; }

.diagram { background: #20252b; }
.node-rect { stroke: #4b5a69; stroke-width: 1; fill: #cfe8ff; }
.node-label { font-size: 12px; dominant-baseline: middle; text-anchor: middle; pointer-events: none; fill: #ffffff; }
.node.selected .node-rect { stroke: var(--color-accent); stroke-width: 2; }

/* Edges */
.edge path { cursor: pointer; transition: stroke 160ms ease, stroke-width 160ms ease; }
.edge:hover path { stroke-width: 1.8; }
.edge-label { pointer-events: none; font-family: system-ui, sans-serif; fill: #ccd5dd; text-shadow: 0 0 2px rgba(0,0,0,0.5); }

.connection-handle {
  cursor: crosshair;
  stroke: #444;
  fill: #ffffff;
  vector-effect: non-scaling-stroke;
}
.connection-handle:hover {
  fill: #e0e0e0;
}
[data-temp-edge="true"] path {
  stroke: #666;
  vector-effect: non-scaling-stroke;
}

.edge-arrow-select { display: inline-flex; align-items: center; gap: 4px; font-size: 12px; }
.edge-arrow-select select { font-size: 12px; padding: 2px 4px; }
.edge-arrow-label { font-size: 12px; }

/* Dynamic per-node colors via data attributes (fallback to CSS vars not widely supported with attr()) */
/* Note: dynamic color now applied directly via SVG element fill attributes in React rendering. */

/* Property Pane */
.property-pane { display: flex; flex-direction: column; gap: 8px; }
.property-pane fieldset { border: 1px solid var(--color-border); padding: 8px; }
.property-pane label { display: flex; flex-direction: column; font-size: 12px; gap: 4px; }
.property-pane input[type="text"], .property-pane select, .property-pane input[type="color"] { background: #1f2228; border: 1px solid var(--color-border); color: var(--color-text); padding: 4px; }
