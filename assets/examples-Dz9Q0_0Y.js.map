{"version":3,"file":"examples-Dz9Q0_0Y.js","sources":["../../src/model/examples.ts"],"sourcesContent":["import { DiagramState } from '../core/commands.js';\r\n\r\n// A small catalog of example diagrams that can be loaded via\r\n// the URL query parameter: ?example=<key>\r\n// They intentionally keep edges empty until edge rendering is implemented.\r\nexport const examples: Record<string, DiagramState> = {\r\n  'basic-flow': {\r\n  schemaVersion: '1.1.0',\r\n    metadata: { title: 'Basic Flow' },\r\n    selection: [],\r\n    nodes: [\r\n      { id: 'start', type: 'start', x: 80, y: 120, w: 140, h: 60 },\r\n      { id: 'process', type: 'process', x: 320, y: 120, w: 160, h: 60 },\r\n      { id: 'end', type: 'end', x: 600, y: 120, w: 140, h: 60 }\r\n    ],\r\n    edges: []\r\n  },\r\n  'architecture': {\r\n  schemaVersion: '1.1.0',\r\n    metadata: { title: 'Mini Architecture' },\r\n    selection: [],\r\n    nodes: [\r\n      { id: 'client', type: 'client', x: 60, y: 80, w: 160, h: 60 },\r\n      { id: 'api', type: 'api', x: 300, y: 60, w: 160, h: 60 },\r\n      { id: 'auth', type: 'auth', x: 300, y: 160, w: 160, h: 60 },\r\n      { id: 'db', type: 'database', x: 560, y: 110, w: 180, h: 70 },\r\n      { id: 'cache', type: 'cache', x: 560, y: 220, w: 180, h: 70 }\r\n    ],\r\n    edges: []\r\n  },\r\n  'grid': {\r\n  schemaVersion: '1.1.0',\r\n    metadata: { title: 'Grid Layout' },\r\n    selection: [],\r\n    nodes: Array.from({ length: 12 }).map((_, i) => {\r\n      const col = i % 4;\r\n      const row = Math.floor(i / 4);\r\n      return {\r\n        id: `n${i}`,\r\n        type: `N${i}`,\r\n        x: 80 + col * 180,\r\n        y: 80 + row * 140,\r\n        w: 150,\r\n        h: 70\r\n      };\r\n    }),\r\n    edges: []\r\n  }\r\n  ,\r\n  'basic-flow-connected': {\r\n    schemaVersion: '1.1.0',\r\n    metadata: { title: 'Basic Flow (Connected)' },\r\n    selection: [],\r\n    nodes: [\r\n      { id: 'start', type: 'start', x: 80, y: 120, w: 140, h: 60 },\r\n      { id: 'process', type: 'process', x: 320, y: 120, w: 160, h: 60 },\r\n      { id: 'end', type: 'end', x: 600, y: 120, w: 140, h: 60 }\r\n    ],\r\n    edges: [\r\n      { id: 'e1', type: 'edge', source: { nodeId: 'start' }, target: { nodeId: 'process' } },\r\n      { id: 'e2', type: 'edge', source: { nodeId: 'process' }, target: { nodeId: 'end' } }\r\n    ]\r\n  },\r\n  'architecture-connected': {\r\n    schemaVersion: '1.1.0',\r\n    metadata: { title: 'Mini Architecture (Connected)' },\r\n    selection: [],\r\n    nodes: [\r\n      { id: 'client', type: 'client', x: 60, y: 80, w: 160, h: 60 },\r\n      { id: 'api', type: 'api', x: 300, y: 60, w: 160, h: 60 },\r\n      { id: 'auth', type: 'auth', x: 300, y: 160, w: 160, h: 60 },\r\n      { id: 'db', type: 'database', x: 560, y: 110, w: 180, h: 70 },\r\n      { id: 'cache', type: 'cache', x: 560, y: 220, w: 180, h: 70 }\r\n    ],\r\n    edges: [\r\n      { id: 'c1', type: 'edge', source: { nodeId: 'client' }, target: { nodeId: 'api' } },\r\n      { id: 'c2', type: 'edge', source: { nodeId: 'client' }, target: { nodeId: 'auth' } },\r\n      { id: 'c3', type: 'edge', source: { nodeId: 'api' }, target: { nodeId: 'db' } },\r\n      { id: 'c4', type: 'edge', source: { nodeId: 'auth' }, target: { nodeId: 'db' } },\r\n      { id: 'c5', type: 'edge', source: { nodeId: 'api' }, target: { nodeId: 'cache' } },\r\n      { id: 'c6', type: 'edge', source: { nodeId: 'auth' }, target: { nodeId: 'cache' } }\r\n    ]\r\n  }\r\n};\r\n"],"names":["examples","_","i","col","row"],"mappings":"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"}